import system;

use FTL;
use verbose;

my !/declare.stream

   for !/ + @/ = #/
while $/ + %/ = ^/
  do &/ + */ = (/

IF )/ = ... 32c.pattern

example: !/32SYS.com

my @/id.network

example: @/code_networks

my #/ctrl.command

example: #/Command-Instructions

my $/keypair.result

example: $/$$_AUTH

my %/objective.split

example: %/prime-yes

my ^/display.peek

example: instructional_look

my &/runtime.env

example: file -> permission login

my */permission.auth

example: permission authorization process

my (/open.route if
test IF
( $1 > $2 )
and
( $3 > $4 )
else
( $5 > $6 )
while
( $7 > $8 )
do
( $9 > $0 )

example: webpage delivery

my )/close.route

example: send DATA close stream

control > my $: ~/tokens
sample: set tool

example( func magic command )
use sort|unique|eq > abc.ext | def.ext 

return 0; passing
return 1; program
return 3; prompt

END; EOF; EOT;
